// <auto-generated />
using System;
using ClashCreative.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClashCreative.Migrations
{
    [DbContext(typeof(ClashContext))]
    partial class ClashContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ClashCreative.Models.Battle", b =>
                {
                    b.Property<int>("BattleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BattleTime")
                        .HasColumnType("text");

                    b.Property<string>("DeckSelection")
                        .HasColumnType("text");

                    b.Property<int>("GameModeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsLadderTournament")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Team1Crowns")
                        .HasColumnType("int");

                    b.Property<int>("Team1DeckAId")
                        .HasColumnType("int");

                    b.Property<int>("Team1DeckBId")
                        .HasColumnType("int");

                    b.Property<int>("Team1Id")
                        .HasColumnType("int");

                    b.Property<int>("Team1KingTowerHp")
                        .HasColumnType("int");

                    b.Property<string>("Team1Name")
                        .HasColumnType("text");

                    b.Property<int>("Team1PrincessTowerHpA")
                        .HasColumnType("int");

                    b.Property<int>("Team1PrincessTowerHpB")
                        .HasColumnType("int");

                    b.Property<int>("Team1StartingTrophies")
                        .HasColumnType("int");

                    b.Property<int>("Team1TrophyChange")
                        .HasColumnType("int");

                    b.Property<bool>("Team1Win")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Team2Crowns")
                        .HasColumnType("int");

                    b.Property<int>("Team2DeckAId")
                        .HasColumnType("int");

                    b.Property<int>("Team2DeckBId")
                        .HasColumnType("int");

                    b.Property<int>("Team2Id")
                        .HasColumnType("int");

                    b.Property<int>("Team2KingTowerHp")
                        .HasColumnType("int");

                    b.Property<string>("Team2Name")
                        .HasColumnType("text");

                    b.Property<int>("Team2PrincessTowerHpA")
                        .HasColumnType("int");

                    b.Property<int>("Team2PrincessTowerHpB")
                        .HasColumnType("int");

                    b.Property<int>("Team2StartingTrophies")
                        .HasColumnType("int");

                    b.Property<int>("Team2TrophyChange")
                        .HasColumnType("int");

                    b.Property<bool>("Team2Win")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("BattleId");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("ClashCreative.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("ClashCreative.Models.Clan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BadgeId")
                        .HasColumnType("int");

                    b.Property<int>("ClanChestLevel")
                        .HasColumnType("int");

                    b.Property<string>("ClanChestStatus")
                        .HasColumnType("text");

                    b.Property<int>("ClanScore")
                        .HasColumnType("int");

                    b.Property<int>("ClanWarTrophies")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("DonationsPerWeek")
                        .HasColumnType("int");

                    b.Property<string>("LocationCode")
                        .HasColumnType("text");

                    b.Property<int>("Members")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("RequiredTrophies")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Clans");
                });

            modelBuilder.Entity("ClashCreative.Models.Deck", b =>
                {
                    b.Property<int>("DeckId")
                        .HasColumnType("int");

                    b.Property<int>("Card1Id")
                        .HasColumnType("int");

                    b.Property<int>("Card2Id")
                        .HasColumnType("int");

                    b.Property<int>("Card3Id")
                        .HasColumnType("int");

                    b.Property<int>("Card4Id")
                        .HasColumnType("int");

                    b.Property<int>("Card5Id")
                        .HasColumnType("int");

                    b.Property<int>("Card6Id")
                        .HasColumnType("int");

                    b.Property<int>("Card7Id")
                        .HasColumnType("int");

                    b.Property<int>("Card8Id")
                        .HasColumnType("int");

                    b.HasKey("DeckId");

                    b.ToTable("Decks");
                });

            modelBuilder.Entity("ClashCreative.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BestTrophies")
                        .HasColumnType("int");

                    b.Property<int>("CardsDiscovered")
                        .HasColumnType("int");

                    b.Property<int>("ClanCardsCollected")
                        .HasColumnType("int");

                    b.Property<string>("ClanTag")
                        .HasColumnType("text");

                    b.Property<int>("CurrentDeckId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentFavouriteCardId")
                        .HasColumnType("int");

                    b.Property<int>("Donations")
                        .HasColumnType("int");

                    b.Property<int>("DonationsReceived")
                        .HasColumnType("int");

                    b.Property<int>("ExpLevel")
                        .HasColumnType("int");

                    b.Property<string>("LastSeen")
                        .HasColumnType("text");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<int>("StarPoints")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .HasColumnType("text");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("TotalDonations")
                        .HasColumnType("int");

                    b.Property<int>("Trophies")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ClashCreative.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Name2")
                        .HasColumnType("text");

                    b.Property<string>("Tag")
                        .HasColumnType("text");

                    b.Property<string>("Tag2")
                        .HasColumnType("text");

                    b.Property<string>("TeamName")
                        .HasColumnType("text");

                    b.Property<bool>("TwoVTwo")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("TeamId");

                    b.ToTable("Team");
                });
#pragma warning restore 612, 618
        }
    }
}
